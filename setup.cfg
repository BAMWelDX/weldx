[metadata]
name = weldx
author = "Cagtay Fabry <cagtay.fabry@bam.de>, Volker Hirthammer <volker.hirthammer@bam.de>, Martin K. Scherer <martin.scherer@bam.de>"
author_email = "cagtay.fabry@bam.de"
home_page = https://www.bam.de/weldx
description = Python API for the WelDX file format and standard
long_description = file: README.rst
long_description_content_type = text/x-rst
license = BSD License
license_file = LICENSE
platform = any
keywords =
    welding
    weldx
    bam
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Natural Language :: English
    Programming Language :: Python
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Scientific/Engineering :: Physics
project_urls =
    Documentation = https://weldx.readthedocs.io
    Source Code = https://github.com/BAMweldx/weldx
    Bug Tracker = https://github.com/BAMweldx/weldx/issues
    Changelog = https://github.com/BAMweldx/weldx/blob/master/CHANGELOG.rst

[options]
packages = find:
python_requires = >=3.8
setup_requires =
    setuptools >=38.3.0
    setuptools_scm
install_requires =
    numpy >=1.18
    pandas >=1.0
    xarray >=0.15
    scipy >=1.4,!=1.6.0,!=1.6.1
    sympy >=1.6
    pint >=0.11
    asdf >=2.8
    bottleneck >=1.3
    boltons
    networkx >=2
    matplotlib >=3
    fs
    ipywidgets
    ipykernel <6.4
    k3d !=2.10
    meshio
    psutil
include_package_data = True

[options.extras_require]
test =
    pytest
    pytest-cov
    pytest-xdist
    nbval

[options.entry_points]
asdf.extensions =
    weldx = weldx.asdf.extension:get_extensions
    weldx_validators = weldx.asdf._extension:WeldxValidatorExtension
asdf.resource_mappings =
    weldx_schemas = weldx.asdf.extension:get_resource_mappings
console_scripts =
    welding_schema = weldx.asdf.cli.welding_schema:main

[flake8]
# References:
# https://flake8.readthedocs.io/en/latest/user/configuration.html
# https://flake8.readthedocs.io/en/latest/user/error-codes.html

# Note: there cannot be spaces after comma's here
ignore =
    W503,W504,  # line break after binary operator
    E203        # E203 whitespace before ':' (not PEP8 compliant anyway)
max-line-length = 88
select = C,E,F,W,B,B950 # black formatting options
per-file-ignores =
    aws_setup.py:E501
exclude =
    __init__.py,
    doc/conf.py,

[pydocstyle]
# convention numpy is currently equivalent to ignoring 'D107', 'D203', 'D212', 'D213', 'D402', 'D413'
convention = numpy
match = (?!__)(?!_version)(?!conftest).*\.py
match_dir = ^(?!(tests|tags|asdf)).*

[tool:pytest]
addopts = --tb=short --color=yes -rsw --cov=weldx --cov-report=term-missing:skip-covered --doctest-modules
#addopts = --tb=short --color=yes -rs -p no:cov
testpaths =
    weldx
# custom test markers, see https://docs.pytest.org/en/latest/example/markers.html#mark-examples
markers =
    slow: marks tests as slow to run (skipped by default, enable with --runslow option)
asdf_schema_root = weldx/schemas/weldx.bam.de/weldx
#asdf_schema_tests_enabled = true
#asdf_schema_skip_tests =
#    weldx.bam.de/weldx/datamodels/single_pass_weld-1.0.0.schema.yaml
norecursedirs = doc
filterwarnings =
    ignore::DeprecationWarning:traittypes.*:

[isort]
profile = black
default_section = THIRDPARTY
known_first_party = weldx
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[coverage:report]
omit =
    weldx/_version.py
    weldx/tests/*

exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

# ignore class __repr__-like functions:
    def __repr__
    def __str__
    def _ipython_display_

[mypy]
python_version = 3.9
files=weldx
ignore_missing_imports = True
strict_optional = False
pretty = True
allow_redefinition = True
show_error_context = True
show_error_codes = True
show_column_numbers = True

[mypy-weldx.asdf.*]
ignore_errors = True
[mypy-weldx.tags.*]
ignore_errors = True
[mypy-weldx.tests.*]
ignore_errors = True
# remove after refactoring the geometry module
[mypy-weldx.geometry.*]
ignore_errors = True

# this is a workaround for an xarray related mypy bug
# see https://github.com/python/mypy/pull/9495
# and https://github.com/space-physics/msise00/commit/8b59a9383dd6fcc54b7dac74eb95a350308d7b62
[mypy-xarray]
follow_imports = skip
ignore_errors = True
