name: conda build
on:
  # Trigger the workflow on push events on master
  push:
    branches:
      - master
  # Trigger the workflow on all pull request
  pull_request:
  # Trigger the workflow on all release created events (this could redirect to main conda channel)
  release:
    types:
      - created

jobs:
  build:
    name: conda build (local)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('./conda.recipe/build_env.yml') }}

      - name: Setup Conda Environment
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: false
          environment-file: ./conda.recipe/build_env.yml
          activate-environment: build_env
          channels: defaults,conda-forge
          auto-activate-base: false
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          notify_outdated_conda: false

      - name: conda info
        shell: bash -l {0}
        run: conda info

      - name: conda list
        shell: bash -l {0}
        run: conda list

      - name: Build from local conda recipe
        shell: bash -l {0}
        run: conda build .

      - name: upload package to dev label on Anaconda Cloud
        shell: bash -l {0}
        env: # set access token from GitHub secrets
          anaconda_token: ${{ secrets.Anaconda_BAMwelding }}
        run: |
          package_dir=$(conda build . --output)
          anaconda -t $anaconda_token upload --user BAMwelding --label dev $package_dir
